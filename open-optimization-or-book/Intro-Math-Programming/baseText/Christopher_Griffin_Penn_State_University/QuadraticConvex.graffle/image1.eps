%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, February 13, 2010 11:49:22 PM EST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
8.00000 6.01709 379.493 346.982 rc
newpath
9.00000 8.01709 m
17.2064 37.3547 l
24.3469 61.8176 l
32.3770 88.1460 l
40.4604 113.384 l
48.5053 137.244 l
55.9640 158.242 l
63.6871 178.846 l
71.6743 198.937 l
79.6359 217.730 l
87.8253 235.778 l
95.0386 250.596 l
103.159 266.069 l
111.312 280.318 l
119.170 292.827 l
126.306 303.149 l
134.791 314.136 l
141.978 322.349 l
150.339 330.642 l
157.740 336.850 l
165.860 342.438 l
173.593 346.569 l
181.660 349.642 l
189.069 351.351 l
197.060 351.999 l
205.361 351.360 l
212.587 349.715 l
220.391 346.800 l
228.453 342.546 l
236.341 337.164 l
243.972 330.806 l
252.446 322.423 l
260.060 313.701 l
268.189 303.146 l
275.555 292.474 l
283.609 279.601 l
291.186 266.338 l
299.107 251.284 l
306.851 235.388 l
314.959 217.498 l
322.767 199.063 l
330.752 178.985 l
338.671 157.852 l
345.948 137.359 l
354.288 112.607 l
361.747 89.3253 l
369.700 63.3119 l
377.313 37.2636 l
385.493 8.01709 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
362.000 352.000 m
362.000 355.000 l
S
newpath
315.000 352.000 m
315.000 355.000 l
S
newpath
268.000 352.000 m
268.000 355.000 l
S
newpath
221.000 352.000 m
221.000 355.000 l
S
newpath
174.000 352.000 m
174.000 355.000 l
S
newpath
127.000 352.000 m
127.000 355.000 l
S
newpath
80.0000 352.000 m
80.0000 355.000 l
S
newpath
33.0000 352.000 m
33.0000 355.000 l
S
newpath
9.00000 352.000 m
385.493 352.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
284 375 15 15 rc
newpath
291.427 381.255 m
291.591 381.475 291.703 381.695 291.765 381.915  c
291.811 382.067 291.856 382.467 291.900 383.115  c
292.626 382.277 l
292.814 382.074 293.033 381.880 293.281 381.696  c
293.530 381.512 293.741 381.386 293.916 381.318  c
294.026 381.276 294.142 381.255 294.265 381.255  c
294.447 381.255 294.582 381.304 294.670 381.401  c
294.759 381.498 294.789 381.617 294.761 381.756  c
294.729 381.917 294.675 382.027 294.600 382.086  c
294.460 382.192 294.314 382.245 294.162 382.245  c
294.073 382.245 293.982 382.226 293.888 382.188  c
293.702 382.120 293.576 382.086 293.508 382.086  c
293.406 382.086 293.274 382.146 293.111 382.264  c
292.804 382.484 292.406 382.910 291.916 383.540  c
292.000 385.724 l
292.013 386.058 292.041 386.258 292.083 386.324  c
292.125 386.389 292.173 386.422 292.228 386.422  c
292.317 386.422 292.431 386.373 292.569 386.276  c
292.840 386.081 293.090 385.827 293.318 385.514  c
293.517 385.628 l
293.150 386.128 292.729 386.543 292.252 386.873  c
291.983 387.059 291.767 387.152 291.606 387.152  c
291.369 387.152 291.208 387.019 291.121 386.752  c
291.065 386.587 291.024 385.876 290.996 384.619  c
290.106 385.766 289.429 386.504 288.966 386.835  c
288.665 387.046 288.394 387.152 288.153 387.152  c
287.984 387.152 287.842 387.091 287.727 386.968  c
287.644 386.875 287.618 386.750 287.649 386.593  c
287.677 386.454 287.747 386.337 287.859 386.244  c
287.970 386.151 288.094 386.105 288.229 386.105  c
288.365 386.105 288.495 386.172 288.620 386.308  c
288.711 386.405 288.786 386.454 288.845 386.454  c
288.896 386.454 288.968 386.420 289.062 386.352  c
289.293 386.191 289.633 385.844 290.083 385.311  c
290.532 384.778 290.834 384.393 290.987 384.156  c
290.930 383.127 290.897 382.584 290.888 382.524  c
290.845 382.249 290.757 382.055 290.624 381.940  c
290.490 381.826 290.271 381.769 289.966 381.769  c
289.869 381.769 289.756 381.773 289.627 381.782  c
289.673 381.553 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
9.00000 352.000 m
9.00000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 365 7 13 rc
newpath
16.7900 372.438 m
8.21000 372.438 l
8.21000 371.762 l
16.7900 371.762 l
h
f
Q
newpath
21.0493 372.826 m
21.0493 373.727 l
19.8940 373.727 l
19.8940 376.000 l
18.8466 376.000 l
18.8466 373.727 l
15.2031 373.727 l
15.2031 372.915 l
19.1958 367.214 l
19.8940 367.214 l
19.8940 372.826 l
h
18.8466 372.826 m
18.8466 368.554 l
15.8252 372.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
56.0000 352.000 m
56.0000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
53 365 7 13 rc
newpath
63.7900 372.438 m
55.2100 372.438 l
55.2100 371.762 l
63.7900 371.762 l
h
f
Q
newpath
62.6601 369.030 m
62.9056 368.450 63.2155 368.003 63.5900 367.687  c
63.9646 367.372 64.4311 367.214 64.9897 367.214  c
65.6795 367.214 66.2085 367.439 66.5766 367.887  c
66.8559 368.222 66.9956 368.579 66.9956 368.960  c
66.9956 369.586 66.6020 370.234 65.8149 370.902  c
66.3439 371.110 66.7438 371.406 67.0146 371.791  c
67.2854 372.176 67.4209 372.629 67.4209 373.149  c
67.4209 373.894 67.1839 374.540 66.7099 375.085  c
66.0921 375.796 65.1971 376.152 64.0249 376.152  c
63.4451 376.152 63.0505 376.080 62.8410 375.936  c
62.6315 375.792 62.5268 375.638 62.5268 375.473  c
62.5268 375.350 62.5765 375.242 62.6760 375.149  c
62.7754 375.056 62.8950 375.009 63.0346 375.009  c
63.1404 375.009 63.2483 375.026 63.3584 375.060  c
63.4303 375.081 63.5932 375.158 63.8471 375.292  c
64.1010 375.425 64.2766 375.504 64.3740 375.530  c
64.5306 375.576 64.6977 375.600 64.8754 375.600  c
65.3071 375.600 65.6827 375.432 66.0022 375.098  c
66.3217 374.764 66.4814 374.368 66.4814 373.911  c
66.4814 373.577 66.4073 373.251 66.2592 372.934  c
66.1492 372.697 66.0286 372.517 65.8974 372.394  c
65.7154 372.225 65.4658 372.071 65.1484 371.934  c
64.8310 371.796 64.5073 371.728 64.1772 371.728  c
63.9741 371.728 l
63.9741 371.537 l
64.3084 371.495 64.6438 371.374 64.9802 371.175  c
65.3166 370.976 65.5610 370.737 65.7133 370.458  c
65.8657 370.179 65.9418 369.872 65.9418 369.538  c
65.9418 369.102 65.8054 368.749 65.5324 368.481  c
65.2595 368.212 64.9199 368.078 64.5136 368.078  c
63.8577 368.078 63.3097 368.429 62.8696 369.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
103.000 352.000 m
103.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
100 365 7 13 rc
newpath
110.790 372.438 m
102.210 372.438 l
102.210 371.762 l
110.790 371.762 l
h
f
Q
newpath
114.960 374.343 m
114.357 376.000 l
109.279 376.000 l
109.279 375.765 l
110.773 374.402 111.824 373.289 112.434 372.426  c
113.043 371.563 113.348 370.773 113.348 370.058  c
113.348 369.512 113.181 369.064 112.846 368.712  c
112.512 368.361 112.112 368.186 111.647 368.186  c
111.223 368.186 110.844 368.309 110.507 368.557  c
110.171 368.804 109.922 369.167 109.761 369.646  c
109.526 369.646 l
109.632 368.863 109.904 368.262 110.342 367.843  c
110.780 367.424 111.327 367.214 111.983 367.214  c
112.681 367.214 113.264 367.439 113.732 367.887  c
114.199 368.336 114.433 368.865 114.433 369.474  c
114.433 369.910 114.332 370.346 114.128 370.782  c
113.815 371.467 113.307 372.193 112.605 372.959  c
111.551 374.110 110.893 374.804 110.631 375.041  c
112.878 375.041 l
113.335 375.041 113.656 375.024 113.840 374.990  c
114.024 374.956 114.190 374.888 114.338 374.784  c
114.486 374.680 114.615 374.533 114.725 374.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
150.000 352.000 m
150.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
147 365 7 13 rc
newpath
157.790 372.438 m
149.210 372.438 l
149.210 371.762 l
157.790 371.762 l
h
f
Q
newpath
157.523 368.236 m
159.618 367.214 l
159.827 367.214 l
159.827 374.482 l
159.827 374.965 159.847 375.265 159.887 375.384  c
159.928 375.502 160.011 375.593 160.138 375.657  c
160.265 375.720 160.523 375.756 160.913 375.765  c
160.913 376.000 l
157.675 376.000 l
157.675 375.765 l
158.082 375.756 158.344 375.721 158.462 375.660  c
158.581 375.599 158.663 375.516 158.710 375.412  c
158.757 375.309 158.780 374.999 158.780 374.482  c
158.780 369.836 l
158.780 369.210 158.759 368.808 158.716 368.630  c
158.687 368.495 158.633 368.395 158.554 368.332  c
158.476 368.268 158.382 368.236 158.272 368.236  c
158.115 368.236 157.897 368.302 157.618 368.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.000 352.000 m
197.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
199.469 371.747 m
199.469 370.765 199.617 369.920 199.914 369.211  c
200.210 368.502 200.603 367.974 201.094 367.627  c
201.475 367.352 201.869 367.214 202.275 367.214  c
202.935 367.214 203.528 367.551 204.052 368.224  c
204.708 369.057 205.036 370.187 205.036 371.613  c
205.036 372.612 204.892 373.460 204.605 374.159  c
204.317 374.857 203.950 375.364 203.503 375.679  c
203.057 375.994 202.626 376.152 202.211 376.152  c
201.391 376.152 200.707 375.667 200.161 374.698  c
199.700 373.882 199.469 372.898 199.469 371.747  c
h
200.713 371.905 m
200.713 373.090 200.859 374.057 201.151 374.806  c
201.393 375.437 201.752 375.752 202.231 375.752  c
202.459 375.752 202.696 375.649 202.941 375.444  c
203.187 375.239 203.373 374.895 203.500 374.413  c
203.695 373.685 203.792 372.659 203.792 371.334  c
203.792 370.352 203.690 369.533 203.487 368.877  c
203.335 368.391 203.138 368.046 202.897 367.843  c
202.724 367.703 202.514 367.633 202.269 367.633  c
201.981 367.633 201.725 367.762 201.501 368.021  c
201.196 368.372 200.988 368.924 200.878 369.677  c
200.768 370.431 200.713 371.173 200.713 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
244.000 352.000 m
244.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
247.523 368.236 m
249.618 367.214 l
249.827 367.214 l
249.827 374.482 l
249.827 374.965 249.847 375.265 249.887 375.384  c
249.928 375.502 250.011 375.593 250.138 375.657  c
250.265 375.720 250.523 375.756 250.913 375.765  c
250.913 376.000 l
247.675 376.000 l
247.675 375.765 l
248.082 375.756 248.344 375.721 248.462 375.660  c
248.581 375.599 248.663 375.516 248.710 375.412  c
248.757 375.309 248.780 374.999 248.780 374.482  c
248.780 369.836 l
248.780 369.210 248.759 368.808 248.716 368.630  c
248.687 368.495 248.633 368.395 248.554 368.332  c
248.476 368.268 248.382 368.236 248.272 368.236  c
248.115 368.236 247.897 368.302 247.618 368.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
291.000 352.000 m
291.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
298.960 374.343 m
298.357 376.000 l
293.279 376.000 l
293.279 375.765 l
294.773 374.402 295.824 373.289 296.434 372.426  c
297.043 371.563 297.348 370.773 297.348 370.058  c
297.348 369.512 297.181 369.064 296.846 368.712  c
296.512 368.361 296.112 368.186 295.647 368.186  c
295.223 368.186 294.844 368.309 294.507 368.557  c
294.171 368.804 293.922 369.167 293.761 369.646  c
293.526 369.646 l
293.632 368.863 293.904 368.262 294.342 367.843  c
294.780 367.424 295.327 367.214 295.983 367.214  c
296.681 367.214 297.264 367.439 297.732 367.887  c
298.199 368.336 298.433 368.865 298.433 369.474  c
298.433 369.910 298.332 370.346 298.128 370.782  c
297.815 371.467 297.307 372.193 296.605 372.959  c
295.551 374.110 294.893 374.804 294.631 375.041  c
296.878 375.041 l
297.335 375.041 297.656 375.024 297.840 374.990  c
298.024 374.956 298.190 374.888 298.338 374.784  c
298.486 374.680 298.615 374.533 298.725 374.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
338.000 352.000 m
338.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
340.660 369.030 m
340.905 368.450 341.215 368.003 341.590 367.687  c
341.964 367.372 342.431 367.214 342.989 367.214  c
343.679 367.214 344.208 367.439 344.576 367.887  c
344.856 368.222 344.995 368.579 344.995 368.960  c
344.995 369.586 344.602 370.234 343.814 370.902  c
344.343 371.110 344.743 371.406 345.014 371.791  c
345.285 372.176 345.420 372.629 345.420 373.149  c
345.420 373.894 345.183 374.540 344.710 375.085  c
344.092 375.796 343.197 376.152 342.024 376.152  c
341.445 376.152 341.050 376.080 340.841 375.936  c
340.631 375.792 340.526 375.638 340.526 375.473  c
340.526 375.350 340.576 375.242 340.676 375.149  c
340.775 375.056 340.895 375.009 341.034 375.009  c
341.140 375.009 341.248 375.026 341.358 375.060  c
341.430 375.081 341.593 375.158 341.847 375.292  c
342.101 375.425 342.276 375.504 342.374 375.530  c
342.530 375.576 342.697 375.600 342.875 375.600  c
343.307 375.600 343.682 375.432 344.002 375.098  c
344.321 374.764 344.481 374.368 344.481 373.911  c
344.481 373.577 344.407 373.251 344.259 372.934  c
344.149 372.697 344.028 372.517 343.897 372.394  c
343.715 372.225 343.465 372.071 343.148 371.934  c
342.831 371.796 342.507 371.728 342.177 371.728  c
341.974 371.728 l
341.974 371.537 l
342.308 371.495 342.643 371.374 342.980 371.175  c
343.316 370.976 343.561 370.737 343.713 370.458  c
343.865 370.179 343.941 369.872 343.941 369.538  c
343.941 369.102 343.805 368.749 343.532 368.481  c
343.259 368.212 342.919 368.078 342.513 368.078  c
341.857 368.078 341.309 368.429 340.869 369.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
385.000 352.000 m
385.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
393.049 372.826 m
393.049 373.727 l
391.894 373.727 l
391.894 376.000 l
390.846 376.000 l
390.846 373.727 l
387.203 373.727 l
387.203 372.915 l
391.195 367.214 l
391.894 367.214 l
391.894 372.826 l
h
390.846 372.826 m
390.846 368.554 l
387.825 372.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
197.000 30.0000 m
195.000 30.0000 l
S
newpath
197.000 73.0000 m
195.000 73.0000 l
S
newpath
197.000 116.000 m
195.000 116.000 l
S
newpath
197.000 159.000 m
195.000 159.000 l
S
newpath
197.000 202.000 m
195.000 202.000 l
S
newpath
197.000 245.000 m
195.000 245.000 l
S
newpath
197.000 288.000 m
195.000 288.000 l
S
newpath
197.000 331.000 m
195.000 331.000 l
S
newpath
197.000 351.999 m
197.000 8.01709 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
160 173 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
197.000 352.000 m
192.000 352.000 l
S
Q
q
newpath
197.000 309.000 m
192.000 309.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
191.960 317.343 m
191.357 319.000 l
186.279 319.000 l
186.279 318.765 l
187.773 317.402 188.824 316.289 189.434 315.426  c
190.043 314.563 190.348 313.773 190.348 313.058  c
190.348 312.512 190.181 312.064 189.846 311.712  c
189.512 311.361 189.112 311.186 188.647 311.186  c
188.223 311.186 187.844 311.309 187.507 311.557  c
187.171 311.804 186.922 312.167 186.761 312.646  c
186.526 312.646 l
186.632 311.863 186.904 311.262 187.342 310.843  c
187.780 310.424 188.327 310.214 188.983 310.214  c
189.681 310.214 190.264 310.439 190.732 310.887  c
191.199 311.336 191.433 311.865 191.433 312.474  c
191.433 312.910 191.332 313.346 191.128 313.782  c
190.815 314.467 190.307 315.193 189.605 315.959  c
188.551 317.110 187.893 317.804 187.631 318.041  c
189.878 318.041 l
190.335 318.041 190.656 318.024 190.840 317.990  c
191.024 317.956 191.190 317.888 191.338 317.784  c
191.486 317.680 191.615 317.533 191.725 317.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.000 266.000 m
192.000 266.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
192.049 272.826 m
192.049 273.727 l
190.894 273.727 l
190.894 276.000 l
189.846 276.000 l
189.846 273.727 l
186.203 273.727 l
186.203 272.915 l
190.195 267.214 l
190.894 267.214 l
190.894 272.826 l
h
189.846 272.826 m
189.846 268.554 l
186.825 272.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.000 223.000 m
192.000 223.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
191.827 224.214 m
191.827 224.449 l
191.268 224.504 190.812 224.615 190.459 224.783  c
190.105 224.950 189.756 225.205 189.411 225.547  c
189.067 225.890 188.781 226.272 188.554 226.693  c
188.328 227.114 188.139 227.615 187.986 228.194  c
188.596 227.775 189.207 227.566 189.821 227.566  c
190.409 227.566 190.919 227.803 191.351 228.277  c
191.782 228.751 191.998 229.360 191.998 230.105  c
191.998 230.824 191.780 231.480 191.344 232.073  c
190.820 232.792 190.126 233.152 189.262 233.152  c
188.674 233.152 188.175 232.957 187.764 232.568  c
186.960 231.810 186.558 230.829 186.558 229.623  c
186.558 228.852 186.713 228.120 187.022 227.426  c
187.330 226.732 187.772 226.117 188.345 225.579  c
188.918 225.042 189.467 224.680 189.992 224.494  c
190.517 224.307 191.006 224.214 191.459 224.214  c
h
187.878 228.658 m
187.802 229.229 187.764 229.690 187.764 230.042  c
187.764 230.448 187.839 230.889 187.990 231.365  c
188.140 231.841 188.363 232.219 188.659 232.498  c
188.875 232.697 189.137 232.796 189.446 232.796  c
189.814 232.796 190.144 232.623 190.433 232.276  c
190.723 231.929 190.868 231.434 190.868 230.791  c
190.868 230.067 190.724 229.441 190.437 228.912  c
190.149 228.383 189.740 228.118 189.211 228.118  c
189.051 228.118 188.878 228.152 188.694 228.220  c
188.510 228.287 188.238 228.433 187.878 228.658  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.000 180.000 m
192.000 180.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
188.494 185.664 m
187.813 185.106 187.374 184.657 187.177 184.318  c
186.980 183.980 186.882 183.629 186.882 183.265  c
186.882 182.706 187.098 182.225 187.529 181.821  c
187.961 181.416 188.534 181.214 189.250 181.214  c
189.944 181.214 190.502 181.403 190.925 181.779  c
191.349 182.156 191.560 182.585 191.560 183.068  c
191.560 183.390 191.446 183.717 191.217 184.052  c
190.989 184.386 190.513 184.780 189.789 185.232  c
190.534 185.808 191.027 186.261 191.268 186.591  c
191.590 187.022 191.751 187.477 191.751 187.956  c
191.751 188.561 191.520 189.078 191.059 189.508  c
190.597 189.937 189.992 190.152 189.243 190.152  c
188.426 190.152 187.790 189.896 187.333 189.384  c
186.969 188.973 186.787 188.525 186.787 188.038  c
186.787 187.657 186.915 187.280 187.171 186.905  c
187.427 186.531 187.868 186.117 188.494 185.664  c
h
189.491 184.985 m
189.999 184.528 190.320 184.167 190.456 183.903  c
190.591 183.638 190.659 183.339 190.659 183.004  c
190.659 182.560 190.534 182.212 190.284 181.960  c
190.035 181.708 189.694 181.583 189.262 181.583  c
188.831 181.583 188.479 181.707 188.209 181.957  c
187.938 182.207 187.802 182.499 187.802 182.833  c
187.802 183.053 187.858 183.273 187.970 183.493  c
188.083 183.713 188.242 183.923 188.450 184.122  c
h
188.793 185.905 m
188.441 186.202 188.181 186.524 188.012 186.873  c
187.842 187.222 187.758 187.600 187.758 188.006  c
187.758 188.552 187.907 188.989 188.205 189.317  c
188.504 189.645 188.884 189.809 189.345 189.809  c
189.802 189.809 190.168 189.680 190.443 189.422  c
190.718 189.164 190.856 188.851 190.856 188.482  c
190.856 188.178 190.775 187.905 190.614 187.664  c
190.314 187.215 189.707 186.629 188.793 185.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.000 137.000 m
192.000 137.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
180.523 139.236 m
182.618 138.214 l
182.827 138.214 l
182.827 145.482 l
182.827 145.965 182.847 146.265 182.887 146.384  c
182.928 146.502 183.011 146.593 183.138 146.657  c
183.265 146.720 183.523 146.756 183.913 146.765  c
183.913 147.000 l
180.675 147.000 l
180.675 146.765 l
181.082 146.756 181.344 146.721 181.462 146.660  c
181.581 146.599 181.663 146.516 181.710 146.412  c
181.757 146.309 181.780 145.999 181.780 145.482  c
181.780 140.836 l
181.780 140.210 181.759 139.808 181.716 139.630  c
181.687 139.495 181.633 139.395 181.554 139.332  c
181.476 139.268 181.382 139.236 181.272 139.236  c
181.115 139.236 180.897 139.302 180.618 139.433  c
h
185.969 142.747 m
185.969 141.765 186.117 140.920 186.414 140.211  c
186.710 139.502 187.103 138.974 187.594 138.627  c
187.975 138.352 188.369 138.214 188.775 138.214  c
189.435 138.214 190.028 138.551 190.552 139.224  c
191.208 140.057 191.536 141.187 191.536 142.613  c
191.536 143.612 191.392 144.460 191.105 145.159  c
190.817 145.857 190.450 146.364 190.003 146.679  c
189.557 146.994 189.126 147.152 188.711 147.152  c
187.891 147.152 187.207 146.667 186.661 145.698  c
186.200 144.882 185.969 143.898 185.969 142.747  c
h
187.213 142.905 m
187.213 144.090 187.359 145.057 187.651 145.806  c
187.893 146.437 188.252 146.752 188.731 146.752  c
188.959 146.752 189.196 146.649 189.441 146.444  c
189.687 146.239 189.873 145.895 190.000 145.413  c
190.195 144.685 190.292 143.659 190.292 142.334  c
190.292 141.352 190.190 140.533 189.987 139.877  c
189.835 139.391 189.638 139.046 189.397 138.843  c
189.224 138.703 189.014 138.633 188.769 138.633  c
188.481 138.633 188.225 138.762 188.001 139.021  c
187.696 139.372 187.488 139.924 187.378 140.677  c
187.268 141.431 187.213 142.173 187.213 142.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.000 94.0000 m
192.000 94.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
180.523 96.2368 m
182.618 95.2148 l
182.827 95.2148 l
182.827 102.482 l
182.827 102.965 182.847 103.265 182.887 103.384  c
182.928 103.502 183.011 103.593 183.138 103.657  c
183.265 103.720 183.523 103.756 183.913 103.765  c
183.913 104.000 l
180.675 104.000 l
180.675 103.765 l
181.082 103.756 181.344 103.721 181.462 103.660  c
181.581 103.599 181.663 103.516 181.710 103.412  c
181.757 103.309 181.780 102.999 181.780 102.482  c
181.780 97.8364 l
181.780 97.2101 181.759 96.8081 181.716 96.6303  c
181.687 96.4949 181.633 96.3955 181.554 96.3320  c
181.476 96.2685 181.382 96.2368 181.272 96.2368  c
181.115 96.2368 180.897 96.3024 180.618 96.4335  c
h
191.460 102.343 m
190.857 104.000 l
185.779 104.000 l
185.779 103.765 l
187.273 102.402 188.324 101.289 188.934 100.426  c
189.543 99.5629 189.848 98.7737 189.848 98.0585  c
189.848 97.5127 189.681 97.0641 189.346 96.7128  c
189.012 96.3616 188.612 96.1860 188.147 96.1860  c
187.723 96.1860 187.344 96.3098 187.007 96.5573  c
186.671 96.8049 186.422 97.1678 186.261 97.6460  c
186.026 97.6460 l
186.132 96.8631 186.404 96.2622 186.842 95.8432  c
187.280 95.4243 187.827 95.2148 188.483 95.2148  c
189.181 95.2148 189.764 95.4391 190.232 95.8877  c
190.699 96.3362 190.933 96.8652 190.933 97.4746  c
190.933 97.9104 190.832 98.3463 190.628 98.7822  c
190.315 99.4677 189.807 100.193 189.105 100.959  c
188.051 102.110 187.393 102.804 187.131 103.041  c
189.378 103.041 l
189.835 103.041 190.156 103.024 190.340 102.990  c
190.524 102.956 190.690 102.888 190.838 102.784  c
190.986 102.680 191.115 102.533 191.225 102.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.000 51.0000 m
192.000 51.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
180.523 53.2368 m
182.618 52.2148 l
182.827 52.2148 l
182.827 59.4829 l
182.827 59.9653 182.847 60.2657 182.887 60.3842  c
182.928 60.5027 183.011 60.5937 183.138 60.6572  c
183.265 60.7207 183.523 60.7566 183.913 60.7651  c
183.913 61.0000 l
180.675 61.0000 l
180.675 60.7651 l
181.082 60.7566 181.344 60.7217 181.462 60.6604  c
181.581 60.5990 181.663 60.5165 181.710 60.4128  c
181.757 60.3091 181.780 59.9991 181.780 59.4829  c
181.780 54.8364 l
181.780 54.2101 181.759 53.8081 181.716 53.6303  c
181.687 53.4949 181.633 53.3955 181.554 53.3320  c
181.476 53.2685 181.382 53.2368 181.272 53.2368  c
181.115 53.2368 180.897 53.3024 180.618 53.4335  c
h
191.549 57.8261 m
191.549 58.7275 l
190.394 58.7275 l
190.394 61.0000 l
189.346 61.0000 l
189.346 58.7275 l
185.703 58.7275 l
185.703 57.9150 l
189.695 52.2148 l
190.394 52.2148 l
190.394 57.8261 l
h
189.346 57.8261 m
189.346 53.5542 l
186.325 57.8261 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.000 8.00000 m
192.000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
180.523 10.2368 m
182.618 9.21484 l
182.827 9.21484 l
182.827 16.4829 l
182.827 16.9653 182.847 17.2657 182.887 17.3842  c
182.928 17.5027 183.011 17.5937 183.138 17.6572  c
183.265 17.7207 183.523 17.7566 183.913 17.7651  c
183.913 18.0000 l
180.675 18.0000 l
180.675 17.7651 l
181.082 17.7566 181.344 17.7217 181.462 17.6604  c
181.581 17.5990 181.663 17.5165 181.710 17.4128  c
181.757 17.3091 181.780 16.9991 181.780 16.4829  c
181.780 11.8364 l
181.780 11.2101 181.759 10.8081 181.716 10.6303  c
181.687 10.4949 181.633 10.3955 181.554 10.3320  c
181.476 10.2685 181.382 10.2368 181.272 10.2368  c
181.115 10.2368 180.897 10.3024 180.618 10.4335  c
h
191.327 9.21484 m
191.327 9.44970 l
190.768 9.50472 190.312 9.61580 189.959 9.78295  c
189.605 9.95011 189.256 10.2050 188.911 10.5478  c
188.567 10.8906 188.281 11.2725 188.054 11.6936  c
187.828 12.1146 187.639 12.6150 187.486 13.1948  c
188.096 12.7758 188.707 12.5664 189.321 12.5664  c
189.909 12.5664 190.419 12.8033 190.851 13.2773  c
191.282 13.7513 191.498 14.3606 191.498 15.1054  c
191.498 15.8248 191.280 16.4807 190.844 17.0732  c
190.320 17.7926 189.626 18.1523 188.762 18.1523  c
188.174 18.1523 187.675 17.9576 187.264 17.5683  c
186.460 16.8108 186.058 15.8291 186.058 14.6230  c
186.058 13.8528 186.213 13.1207 186.522 12.4267  c
186.830 11.7327 187.272 11.1170 187.845 10.5795  c
188.418 10.0421 188.967 9.68033 189.492 9.49414  c
190.017 9.30794 190.506 9.21484 190.959 9.21484  c
h
187.378 13.6582 m
187.302 14.2294 187.264 14.6907 187.264 15.0419  c
187.264 15.4482 187.339 15.8894 187.490 16.3654  c
187.640 16.8415 187.863 17.2192 188.159 17.4985  c
188.375 17.6974 188.637 17.7968 188.946 17.7968  c
189.314 17.7968 189.644 17.6233 189.933 17.2763  c
190.223 16.9293 190.368 16.4342 190.368 15.7910  c
190.368 15.0673 190.224 14.4410 189.937 13.9121  c
189.649 13.3831 189.240 13.1186 188.711 13.1186  c
188.551 13.1186 188.378 13.1525 188.194 13.2202  c
188.010 13.2879 187.738 13.4339 187.378 13.6582  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
end end restore showpage

%%Trailer
%%EOF
