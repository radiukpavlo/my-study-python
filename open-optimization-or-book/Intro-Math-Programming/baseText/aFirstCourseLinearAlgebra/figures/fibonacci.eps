%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Sunday, December 9, 2012 5:37:35 PM MST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
2 J
0 j
[ 1.00000 0 0 1.00000 274.000 58.0000 ] concat
newpath
9.00000 4.50000 m
9.00000 6.98528 6.98528 9.00000 4.50000 9.00000  c
2.01471 9.00000 0 6.98528 0 4.50000  c
0 2.01471 2.01471 0 4.50000 0  c
6.98528 0 9.00000 2.01471 9.00000 4.50000  c
h
f
[ 1.00000 0 0 1.00000 -274.000 -58.0000 ] concat
[ 1.00000 0 0 1.00000 189.000 152.000 ] concat
newpath
9.00000 4.50000 m
9.00000 6.98528 6.98528 9.00000 4.50000 9.00000  c
2.01471 9.00000 0 6.98528 0 4.50000  c
0 2.01471 2.01471 0 4.50000 0  c
6.98528 0 9.00000 2.01471 9.00000 4.50000  c
h
f
[ 1.00000 0 0 1.00000 -189.000 -152.000 ] concat
[ 1.00000 0 0 1.00000 136.000 210.000 ] concat
newpath
9.00000 4.50000 m
9.00000 6.98528 6.98528 9.00000 4.50000 9.00000  c
2.01471 9.00000 0 6.98528 0 4.50000  c
0 2.01471 2.01471 0 4.50000 0  c
6.98528 0 9.00000 2.01471 9.00000 4.50000  c
h
f
[ 1.00000 0 0 1.00000 -136.000 -210.000 ] concat
[ 1.00000 0 0 1.00000 104.000 246.000 ] concat
newpath
9.00000 4.50000 m
9.00000 6.98528 6.98528 9.00000 4.50000 9.00000  c
2.01471 9.00000 0 6.98528 0 4.50000  c
0 2.01471 2.01471 0 4.50000 0  c
6.98528 0 9.00000 2.01471 9.00000 4.50000  c
h
f
[ 1.00000 0 0 1.00000 -104.000 -246.000 ] concat
[ 1.00000 0 0 1.00000 83.0000 268.000 ] concat
newpath
9.00000 4.50000 m
9.00000 6.98528 6.98528 9.00000 4.50000 9.00000  c
2.01471 9.00000 0 6.98528 0 4.50000  c
0 2.01471 2.01471 0 4.50000 0  c
6.98528 0 9.00000 2.01471 9.00000 4.50000  c
h
f
[ 1.00000 0 0 1.00000 -83.0000 -268.000 ] concat
[ 1.00000 0 0 1.00000 72.0000 282.000 ] concat
newpath
9.00000 4.50000 m
9.00000 6.98528 6.98528 9.00000 4.50000 9.00000  c
2.01471 9.00000 0 6.98528 0 4.50000  c
0 2.01471 2.01471 0 4.50000 0  c
6.98528 0 9.00000 2.01471 9.00000 4.50000  c
h
f
[ 1.00000 0 0 1.00000 -72.0000 -282.000 ] concat
[ 1.00000 0 0 1.00000 62.0000 290.000 ] concat
newpath
9.00000 4.50000 m
9.00000 6.98528 6.98528 9.00000 4.50000 9.00000  c
2.01471 9.00000 0 6.98528 0 4.50000  c
0 2.01471 2.01471 0 4.50000 0  c
6.98528 0 9.00000 2.01471 9.00000 4.50000  c
h
f
[ 1.00000 0 0 1.00000 -62.0000 -290.000 ] concat
[ 1.00000 0 0 1.00000 62.0000 297.000 ] concat
newpath
9.00000 4.50000 m
9.00000 6.98528 6.98528 9.00000 4.50000 9.00000  c
2.01471 9.00000 0 6.98528 0 4.50000  c
0 2.01471 2.01471 0 4.50000 0  c
6.98528 0 9.00000 2.01471 9.00000 4.50000  c
h
f
[ 1.00000 0 0 1.00000 -62.0000 -297.000 ] concat
Q
Q
q
2 J
0 j
q
newpath
55.0000 308.000 m
372.960 308.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
209 353 8 37 rc
q
Q
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
55.0000 308.000 m
55.0000 313.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
66.3593 339.734 m
66.3593 341.786 66.0729 343.697 65.5000 345.468  c
65.1562 346.562 64.6953 347.458 64.1171 348.156  c
63.5390 348.854 62.8802 349.406 62.1406 349.812  c
61.4010 350.218 60.5989 350.421 59.7343 350.421  c
58.7447 350.421 57.8515 350.169 57.0546 349.664  c
56.2578 349.158 55.5520 348.437 54.9375 347.500  c
54.4895 346.812 54.0989 345.901 53.7656 344.765  c
53.3385 343.224 53.1250 341.630 53.1250 339.984  c
53.1250 337.755 53.4375 335.703 54.0625 333.828  c
54.5729 332.286 55.3541 331.104 56.4062 330.281  c
57.4583 329.458 58.5677 329.046 59.7343 329.046  c
60.9218 329.046 62.0338 329.453 63.0703 330.265  c
64.1067 331.078 64.8645 332.171 65.3437 333.546  c
66.0208 335.432 66.3593 337.494 66.3593 339.734  c
h
61.7031 339.703 m
61.7031 336.109 61.6822 334.015 61.6406 333.421  c
61.5364 332.026 61.2968 331.078 60.9218 330.578  c
60.6614 330.255 60.2500 330.093 59.6875 330.093  c
59.2500 330.093 58.9062 330.213 58.6562 330.453  c
58.2812 330.807 58.0286 331.432 57.8984 332.328  c
57.7682 333.224 57.7031 336.338 57.7031 341.671  c
57.7031 344.578 57.8072 346.526 58.0156 347.515  c
58.1614 348.234 58.3750 348.713 58.6562 348.953  c
58.9375 349.192 59.3125 349.312 59.7812 349.312  c
60.2812 349.312 60.6614 349.151 60.9218 348.828  c
61.3385 348.265 61.5781 347.395 61.6406 346.218  c
61.7031 339.703 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
160.986 308.000 m
160.986 313.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
159.093 329.046 m
159.093 345.843 l
159.093 347.104 159.148 347.908 159.257 348.257  c
159.367 348.606 159.599 348.890 159.953 349.109  c
160.307 349.328 160.875 349.437 161.656 349.437  c
162.125 349.437 l
162.125 350.000 l
151.312 350.000 l
151.312 349.437 l
151.859 349.437 l
152.734 349.437 153.359 349.335 153.734 349.132  c
154.109 348.929 154.362 348.653 154.492 348.304  c
154.622 347.955 154.687 347.135 154.687 345.843  c
154.687 335.203 l
154.687 334.244 154.643 333.648 154.554 333.414  c
154.466 333.179 154.296 332.979 154.046 332.812  c
153.796 332.645 153.510 332.562 153.187 332.562  c
152.677 332.562 152.052 332.724 151.312 333.046  c
151.046 332.500 l
158.593 329.046 l
159.093 329.046 l
h
178.859 339.734 m
178.859 341.786 178.572 343.697 178.000 345.468  c
177.656 346.562 177.195 347.458 176.617 348.156  c
176.039 348.854 175.380 349.406 174.640 349.812  c
173.901 350.218 173.099 350.421 172.234 350.421  c
171.244 350.421 170.351 350.169 169.554 349.664  c
168.757 349.158 168.052 348.437 167.437 347.500  c
166.989 346.812 166.599 345.901 166.265 344.765  c
165.838 343.224 165.625 341.630 165.625 339.984  c
165.625 337.755 165.937 335.703 166.562 333.828  c
167.072 332.286 167.854 331.104 168.906 330.281  c
169.958 329.458 171.067 329.046 172.234 329.046  c
173.421 329.046 174.533 329.453 175.570 330.265  c
176.606 331.078 177.364 332.171 177.843 333.546  c
178.520 335.432 178.859 337.494 178.859 339.734  c
h
174.203 339.703 m
174.203 336.109 174.182 334.015 174.140 333.421  c
174.036 332.026 173.796 331.078 173.421 330.578  c
173.161 330.255 172.750 330.093 172.187 330.093  c
171.750 330.093 171.406 330.213 171.156 330.453  c
170.781 330.807 170.528 331.432 170.398 332.328  c
170.268 333.224 170.203 336.338 170.203 341.671  c
170.203 344.578 170.307 346.526 170.515 347.515  c
170.661 348.234 170.875 348.713 171.156 348.953  c
171.437 349.192 171.812 349.312 172.281 349.312  c
172.781 349.312 173.161 349.151 173.421 348.828  c
173.838 348.265 174.078 347.395 174.140 346.218  c
174.203 339.703 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
266.973 308.000 m
266.973 313.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
267.843 350.000 m
255.750 350.000 l
255.750 349.671 l
259.458 345.255 261.708 342.286 262.500 340.765  c
263.291 339.244 263.687 337.755 263.687 336.296  c
263.687 335.244 263.359 334.367 262.703 333.664  c
262.046 332.960 261.244 332.609 260.296 332.609  c
258.744 332.609 257.541 333.385 256.687 334.937  c
256.125 334.734 l
256.666 332.796 257.492 331.364 258.601 330.437  c
259.710 329.510 260.994 329.046 262.453 329.046  c
263.484 329.046 264.429 329.289 265.289 329.773  c
266.148 330.257 266.820 330.921 267.304 331.765  c
267.789 332.609 268.031 333.401 268.031 334.140  c
268.031 335.484 267.656 336.843 266.906 338.218  c
265.895 340.093 263.671 342.697 260.234 346.031  c
264.671 346.031 l
265.765 346.031 266.476 345.987 266.804 345.898  c
267.132 345.809 267.401 345.656 267.609 345.437  c
267.817 345.218 268.093 344.760 268.437 344.062  c
268.984 344.062 l
267.843 350.000 l
h
284.859 339.734 m
284.859 341.786 284.572 343.697 284.000 345.468  c
283.656 346.562 283.195 347.458 282.617 348.156  c
282.039 348.854 281.380 349.406 280.640 349.812  c
279.901 350.218 279.099 350.421 278.234 350.421  c
277.244 350.421 276.351 350.169 275.554 349.664  c
274.757 349.158 274.052 348.437 273.437 347.500  c
272.989 346.812 272.599 345.901 272.265 344.765  c
271.838 343.224 271.625 341.630 271.625 339.984  c
271.625 337.755 271.937 335.703 272.562 333.828  c
273.072 332.286 273.854 331.104 274.906 330.281  c
275.958 329.458 277.067 329.046 278.234 329.046  c
279.421 329.046 280.533 329.453 281.570 330.265  c
282.606 331.078 283.364 332.171 283.843 333.546  c
284.520 335.432 284.859 337.494 284.859 339.734  c
h
280.203 339.703 m
280.203 336.109 280.182 334.015 280.140 333.421  c
280.036 332.026 279.796 331.078 279.421 330.578  c
279.161 330.255 278.750 330.093 278.187 330.093  c
277.750 330.093 277.406 330.213 277.156 330.453  c
276.781 330.807 276.528 331.432 276.398 332.328  c
276.268 333.224 276.203 336.338 276.203 341.671  c
276.203 344.578 276.307 346.526 276.515 347.515  c
276.661 348.234 276.875 348.713 277.156 348.953  c
277.437 349.192 277.812 349.312 278.281 349.312  c
278.781 349.312 279.161 349.151 279.421 348.828  c
279.838 348.265 280.078 347.395 280.140 346.218  c
280.203 339.703 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
372.960 308.000 m
372.960 313.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
365.593 339.703 m
365.593 339.171 l
366.739 338.838 367.533 338.528 367.976 338.242  c
368.419 337.955 368.802 337.518 369.125 336.929  c
369.447 336.341 369.609 335.744 369.609 335.140  c
369.609 334.296 369.304 333.575 368.695 332.976  c
368.085 332.377 367.328 332.078 366.421 332.078  c
365.005 332.078 363.802 332.822 362.812 334.312  c
362.250 334.125 l
362.979 332.437 363.911 331.169 365.046 330.320  c
366.182 329.471 367.447 329.046 368.843 329.046  c
370.260 329.046 371.432 329.481 372.359 330.351  c
373.286 331.221 373.750 332.234 373.750 333.390  c
373.750 334.151 373.533 334.882 373.101 335.585  c
372.669 336.289 371.994 336.906 371.078 337.437  c
372.265 338.010 373.169 338.718 373.789 339.562  c
374.408 340.406 374.718 341.463 374.718 342.734  c
374.718 344.869 373.942 346.687 372.390 348.187  c
370.838 349.687 368.760 350.437 366.156 350.437  c
364.427 350.437 363.161 350.151 362.359 349.578  c
361.786 349.171 361.500 348.651 361.500 348.015  c
361.500 347.557 361.666 347.164 362.000 346.835  c
362.333 346.507 362.718 346.343 363.156 346.343  c
363.489 346.343 363.802 346.411 364.093 346.546  c
364.250 346.630 364.820 347.072 365.804 347.875  c
366.789 348.677 367.708 349.078 368.562 349.078  c
369.312 349.078 369.955 348.783 370.492 348.195  c
371.028 347.606 371.296 346.854 371.296 345.937  c
371.296 344.562 370.812 343.291 369.843 342.125  c
368.875 340.958 367.458 340.151 365.593 339.703  c
h
390.859 339.734 m
390.859 341.786 390.572 343.697 390.000 345.468  c
389.656 346.562 389.195 347.458 388.617 348.156  c
388.039 348.854 387.380 349.406 386.640 349.812  c
385.901 350.218 385.099 350.421 384.234 350.421  c
383.244 350.421 382.351 350.169 381.554 349.664  c
380.757 349.158 380.052 348.437 379.437 347.500  c
378.989 346.812 378.599 345.901 378.265 344.765  c
377.838 343.224 377.625 341.630 377.625 339.984  c
377.625 337.755 377.937 335.703 378.562 333.828  c
379.072 332.286 379.854 331.104 380.906 330.281  c
381.958 329.458 383.067 329.046 384.234 329.046  c
385.421 329.046 386.533 329.453 387.570 330.265  c
388.606 331.078 389.364 332.171 389.843 333.546  c
390.520 335.432 390.859 337.494 390.859 339.734  c
h
386.203 339.703 m
386.203 336.109 386.182 334.015 386.140 333.421  c
386.036 332.026 385.796 331.078 385.421 330.578  c
385.161 330.255 384.750 330.093 384.187 330.093  c
383.750 330.093 383.406 330.213 383.156 330.453  c
382.781 330.807 382.528 331.432 382.398 332.328  c
382.268 333.224 382.203 336.338 382.203 341.671  c
382.203 344.578 382.307 346.526 382.515 347.515  c
382.661 348.234 382.875 348.713 383.156 348.953  c
383.437 349.192 383.812 349.312 384.281 349.312  c
384.781 349.312 385.161 349.151 385.421 348.828  c
385.838 348.265 386.078 347.395 386.140 346.218  c
386.203 339.703 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
55.0000 308.000 m
55.0000 19.0553 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 145 8 37 rc
q
Q
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
55.0000 308.000 m
49.8000 308.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
49.3593 314.734 m
49.3593 316.786 49.0729 318.697 48.5000 320.468  c
48.1562 321.562 47.6953 322.458 47.1171 323.156  c
46.5390 323.854 45.8802 324.406 45.1406 324.812  c
44.4010 325.218 43.5989 325.421 42.7343 325.421  c
41.7447 325.421 40.8515 325.169 40.0546 324.664  c
39.2578 324.158 38.5520 323.437 37.9375 322.500  c
37.4895 321.812 37.0989 320.901 36.7656 319.765  c
36.3385 318.224 36.1250 316.630 36.1250 314.984  c
36.1250 312.755 36.4375 310.703 37.0625 308.828  c
37.5729 307.286 38.3541 306.104 39.4062 305.281  c
40.4583 304.458 41.5677 304.046 42.7343 304.046  c
43.9218 304.046 45.0338 304.453 46.0703 305.265  c
47.1067 306.078 47.8645 307.171 48.3437 308.546  c
49.0208 310.432 49.3593 312.494 49.3593 314.734  c
h
44.7031 314.703 m
44.7031 311.109 44.6822 309.015 44.6406 308.421  c
44.5364 307.026 44.2968 306.078 43.9218 305.578  c
43.6614 305.255 43.2500 305.093 42.6875 305.093  c
42.2500 305.093 41.9062 305.213 41.6562 305.453  c
41.2812 305.807 41.0286 306.432 40.8984 307.328  c
40.7682 308.224 40.7031 311.338 40.7031 316.671  c
40.7031 319.578 40.8072 321.526 41.0156 322.515  c
41.1614 323.234 41.3750 323.713 41.6562 323.953  c
41.9375 324.192 42.3125 324.312 42.7812 324.312  c
43.2812 324.312 43.6614 324.151 43.9218 323.828  c
44.3385 323.265 44.5781 322.395 44.6406 321.218  c
44.7031 314.703 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
55.0000 163.527 m
49.8000 163.527 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
31.8437 180.000 m
19.7500 180.000 l
19.7500 179.671 l
23.4583 175.255 25.7083 172.286 26.5000 170.765  c
27.2916 169.244 27.6875 167.755 27.6875 166.296  c
27.6875 165.244 27.3593 164.367 26.7031 163.664  c
26.0468 162.960 25.2447 162.609 24.2968 162.609  c
22.7447 162.609 21.5416 163.385 20.6875 164.937  c
20.1250 164.734 l
20.6666 162.796 21.4921 161.364 22.6015 160.437  c
23.7109 159.510 24.9947 159.046 26.4531 159.046  c
27.4843 159.046 28.4296 159.289 29.2890 159.773  c
30.1484 160.257 30.8203 160.921 31.3046 161.765  c
31.7890 162.609 32.0312 163.401 32.0312 164.140  c
32.0312 165.484 31.6562 166.843 30.9062 168.218  c
29.8958 170.093 27.6718 172.697 24.2343 176.031  c
28.6718 176.031 l
29.7656 176.031 30.4765 175.987 30.8046 175.898  c
31.1328 175.809 31.4010 175.656 31.6093 175.437  c
31.8177 175.218 32.0937 174.760 32.4375 174.062  c
32.9843 174.062 l
31.8437 180.000 l
h
48.8593 169.734 m
48.8593 171.786 48.5729 173.697 48.0000 175.468  c
47.6562 176.562 47.1953 177.458 46.6171 178.156  c
46.0390 178.854 45.3802 179.406 44.6406 179.812  c
43.9010 180.218 43.0989 180.421 42.2343 180.421  c
41.2447 180.421 40.3515 180.169 39.5546 179.664  c
38.7578 179.158 38.0520 178.437 37.4375 177.500  c
36.9895 176.812 36.5989 175.901 36.2656 174.765  c
35.8385 173.224 35.6250 171.630 35.6250 169.984  c
35.6250 167.755 35.9375 165.703 36.5625 163.828  c
37.0729 162.286 37.8541 161.104 38.9062 160.281  c
39.9583 159.458 41.0677 159.046 42.2343 159.046  c
43.4218 159.046 44.5338 159.453 45.5703 160.265  c
46.6067 161.078 47.3645 162.171 47.8437 163.546  c
48.5208 165.432 48.8593 167.494 48.8593 169.734  c
h
44.2031 169.703 m
44.2031 166.109 44.1822 164.015 44.1406 163.421  c
44.0364 162.026 43.7968 161.078 43.4218 160.578  c
43.1614 160.255 42.7500 160.093 42.1875 160.093  c
41.7500 160.093 41.4062 160.213 41.1562 160.453  c
40.7812 160.807 40.5286 161.432 40.3984 162.328  c
40.2682 163.224 40.2031 166.338 40.2031 171.671  c
40.2031 174.578 40.3072 176.526 40.5156 177.515  c
40.6614 178.234 40.8750 178.713 41.1562 178.953  c
41.4375 179.192 41.8125 179.312 42.2812 179.312  c
42.7812 179.312 43.1614 179.151 43.4218 178.828  c
43.8385 178.265 44.0781 177.395 44.1406 176.218  c
44.2031 169.703 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
55.0000 19.0553 m
49.8000 19.0553 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
19.7656 28.2656 m
29.5156 15.0468 l
31.3593 15.0468 l
31.3593 28.2656 l
33.2500 28.2656 l
33.2500 31.3906 l
31.3593 31.3906 l
31.3593 36.0000 l
27.2031 36.0000 l
27.2031 31.3906 l
19.7656 31.3906 l
19.7656 28.2656 l
h
21.2343 28.2656 m
27.2031 28.2656 l
27.2031 20.1718 l
21.2343 28.2656 l
h
48.8593 25.7343 m
48.8593 27.7864 48.5729 29.6979 48.0000 31.4687  c
47.6562 32.5625 47.1953 33.4583 46.6171 34.1562  c
46.0390 34.8541 45.3802 35.4062 44.6406 35.8125  c
43.9010 36.2187 43.0989 36.4218 42.2343 36.4218  c
41.2447 36.4218 40.3515 36.1692 39.5546 35.6640  c
38.7578 35.1588 38.0520 34.4375 37.4375 33.5000  c
36.9895 32.8125 36.5989 31.9010 36.2656 30.7656  c
35.8385 29.2239 35.6250 27.6302 35.6250 25.9843  c
35.6250 23.7552 35.9375 21.7031 36.5625 19.8281  c
37.0729 18.2864 37.8541 17.1041 38.9062 16.2812  c
39.9583 15.4583 41.0677 15.0468 42.2343 15.0468  c
43.4218 15.0468 44.5338 15.4531 45.5703 16.2656  c
46.6067 17.0781 47.3645 18.1718 47.8437 19.5468  c
48.5208 21.4322 48.8593 23.4947 48.8593 25.7343  c
h
44.2031 25.7031 m
44.2031 22.1093 44.1822 20.0156 44.1406 19.4218  c
44.0364 18.0260 43.7968 17.0781 43.4218 16.5781  c
43.1614 16.2552 42.7500 16.0937 42.1875 16.0937  c
41.7500 16.0937 41.4062 16.2135 41.1562 16.4531  c
40.7812 16.8072 40.5286 17.4322 40.3984 18.3281  c
40.2682 19.2239 40.2031 22.3385 40.2031 27.6718  c
40.2031 30.5781 40.3072 32.5260 40.5156 33.5156  c
40.6614 34.2343 40.8750 34.7135 41.1562 34.9531  c
41.4375 35.1927 41.8125 35.3125 42.2812 35.3125  c
42.7812 35.3125 43.1614 35.1510 43.4218 34.8281  c
43.8385 34.2656 44.0781 33.3958 44.1406 32.2187  c
44.2031 25.7031 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
